name: Build TrainTrain App and Test All Modules

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  XCODE_VERSION: 14.2
  APP_SCHEME: "TrainTrainApp"

jobs:
  build-and-test:
    name: Build and Test
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Xcode Version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Cache Tuist dependencies
        uses: actions/cache@v3
        id: tuist-cache
        with:
          path: |
            TrainTrain/Tuist/Dependencies/SwiftPackageManager
            TrainTrain/Tuist/Dependencies/graph.json
            TrainTrain/.tuist/Cache
            ~/.tuist/Cache
          key: ${{ runner.os }}-tuist-${{ hashFiles('TrainTrain/Workspace.swift', 'TrainTrain/Tuist/Dependencies/Lockfiles/*') }}
          restore-keys: |
            ${{ runner.os }}-tuist-

      - name: Install Tuist if not present
        working-directory: TrainTrain
        run: |
          if ! command -v tuist > /dev/null 2>&1; then
            curl -Ls https://install.tuist.io | bash
          fi

      - name: Fetch Tuist dependencies
        working-directory: TrainTrain
        run: tuist fetch

      - name: Build TrainTrainApp
        working-directory: TrainTrain
        run: |
          if tuist build "${{ env.APP_SCHEME }}"; then
            echo "Build succeeded"
          else
            echo "Build failed, performing clean build..."
            tuist build --clean "${{ env.APP_SCHEME }}"
          fi
        env:
          TUIST_IS_CI: 1

      - name: Test all modules
        working-directory: TrainTrain
        run: tuist test
        env:
          TUIST_IS_CI: 1
